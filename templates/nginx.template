user       www www;  ## Default: nobody
worker_processes  auto;  ## Default: 1
error_log  logs/error.log;
pid        /var/run/nginx.pid;
worker_rlimit_nofile 8192;

events {
    worker_connections  4096;  ## Default: 1024
    # use [ kqueue | epoll | /dev/poll | select | poll ];
    use epoll;
}

http {
    include    conf/mime.types;
    default_type application/octet-stream;
    index    index.html index.htm index.php;

    log_format   main '$remote_addr - $remote_user [$time_local]  $status '
      '"$request" $body_bytes_sent "$http_referer" '
      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log   logs/access.log  main;

    # client_header_timeout  3m;
    # client_body_timeout    3m;
    # send_timeout           3m;

    # client_header_buffer_size    1k;
    # large_client_header_buffers  4 4k;

    # gzip on;
    # gzip_min_length  1100;
    # gzip_buffers     4 8k;
    # gzip_types       text/plain;

    # output_buffers   1 32k;
    # postpone_output  1460;

    # sendfile         on;
    # tcp_nopush       on;
    # tcp_nodelay      on;
    # send_lowat       12000;
    # server_names_hash_bucket_size 128; # this seems to be required for some vhosts

    # keepalive_timeout  75 20;

    # lingering_time     30;
    # lingering_timeout  10;
    # reset_timedout_connection  on;

    # server { # php/fastcgi
    #     listen       80;
    #     server_name  domain1.com www.domain1.com;
    #     access_log   logs/domain1.access.log  main;
    #     root         html;

    #     location ~ \.php$ {
    #         fastcgi_pass   127.0.0.1:1025;
    #     }
    # }

    # server { # simple reverse-proxy
    #     listen       80;
    #     server_name  domain2.com www.domain2.com;
    #     access_log   logs/domain2.access.log  main;

    #     # serve static files
    #     location ~ ^/(images|javascript|js|css|flash|media|static)/  {
    #         root    /var/www/virtual/big.server.com/htdocs;
    #         expires 30d;
    #     }

    #     # pass requests for dynamic content to rails/turbogears/zope, et al
    #     location / {
    #         proxy_pass      http://127.0.0.1:8080;
    #     }
    # }

    upstream domain3_server {
        server 127.0.0.3:8000 weight=5;
        server 127.0.0.3:8001 weight=5;
        server 192.168.0.1:8000;
        server 192.168.0.1:8001;
    }

    server {
        listen        80;
        server_name   domain3.com  www.domain3.com;

        # access_log   logs/domain3.access.log  main;

        location / {
            proxy_pass      http://domain3_server;
            proxy_redirect     off;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;

            # client_max_body_size       10m;
            # client_body_buffer_size    128k;

            # client_body_temp_path      /var/nginx/client_body_temp;

            # proxy_connect_timeout      70;
            # proxy_send_timeout         90;
            # proxy_read_timeout         90;
            # proxy_send_lowat           12000;

            # proxy_buffer_size          4k;
            # proxy_buffers              4 32k;
            # proxy_busy_buffers_size    64k;
            # proxy_temp_file_write_size 64k;

            # proxy_temp_path            /var/nginx/proxy_temp;

            # charset utf-8;
        }

        error_page  404  /404.html;

        location /404.html {
            root  /spool/www;
        }

        location /old_stuff/ {
            rewrite   ^/old_stuff/(.*)$  /new_stuff/$1  permanent;
        }

        location /download/ {

            valid_referers  none  blocked  server_names  *.example.com;

            if ($invalid_referer) {
                #rewrite   ^/   http://www.example.com/;
                return   403;
            }

            #rewrite_log  on;

            # rewrite /download/*/mp3/*.any_ext to /download/*/mp3/*.mp3
            rewrite ^/(download/.*)/mp3/(.*)\..*$
                    /$1/mp3/$2.mp3                   break;

            root         /spool/www;
            #autoindex    on;
            access_log   logs/download.access_log  download;
        }

        location ~* \.(jpg|jpeg|gif)$ {
            root         /spool/www;
            access_log   off;
            expires      30d;
        }
    }

    # include    /etc/nginx/proxy.conf;
    # include    /etc/nginx/fastcgi.conf;
}

# vim: filetype=nginx
